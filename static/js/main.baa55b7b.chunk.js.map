{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","isLoaded","goods","goodsCopy","handleOnClick","_this","setState","concat","reverseGoods","prevState","reverse","sortAlphabetical","sort","a","b","localeCompare","sortByLength","length","filterByLength","event","value","target","filter","item","resetGoods","Object","toConsumableArray","react_default","createElement","className","this","type","onClick","onChange","selectedValue","map","option","i","good","key","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"mMAGMA,SAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WA8HaC,6MA1HbC,MAAQ,CACNC,UAAU,EACVC,MAAO,GACPC,UAAW,MAGbC,cAAgB,WACdC,EAAKC,SAAS,CACZJ,MAAK,GAAAK,OAAMT,GACXK,UAAS,GAAAI,OAAMT,GACfG,UAAU,OAIdO,aAAe,WACbH,EAAKC,SAAS,SAAAG,GAAS,MAAK,CAC1BN,UAAWM,EAAUN,UAAUO,gBAKnCC,iBAAmB,WACjBN,EAAKC,SAAS,SAAAG,GAAS,MAAK,CAC1BN,UAAWM,EAAUN,UAAUS,KAC7B,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,WAMhCE,aAAe,WACbX,EAAKC,SAAS,SAAAG,GAAS,MAAK,CAC1BN,UAAWM,EAAUN,UAAUS,KAC7B,SAACC,EAAGC,GAAJ,OAAUA,EAAEG,OAASJ,EAAEI,eAM7BC,eAAiB,SAACC,GAAU,IAClBC,EAAUD,EAAME,OAAhBD,MACRf,EAAKC,SAAS,SAAAG,GAAS,MAAK,CAC1BN,UAAWM,EAAUN,UAAUmB,OAC7B,SAAAC,GAAI,OAAIA,EAAKN,SAAWG,UAK9BI,WAAa,WACXnB,EAAKC,SAAS,SAAAG,GAAS,MAAK,CAC1BN,UAAUsB,OAAAC,EAAA,EAAAD,CAAKhB,EAAUP,mFAM3B,OACEyB,EAAAd,EAAAe,cAAA,OAAKC,UAAU,QACXC,KAAK9B,MAAMC,UACX0B,EAAAd,EAAAe,cAAA,UACEC,UAAU,MACVE,KAAK,SACLC,QAASF,KAAK1B,eAHhB,QAQD0B,KAAK9B,MAAMC,UACV0B,EAAAd,EAAAe,cAAA,WACED,EAAAd,EAAAe,cAAA,UACEC,UAAU,MACVE,KAAK,SACLC,QAASF,KAAKtB,cAHhB,WAQAmB,EAAAd,EAAAe,cAAA,UACEC,UAAU,MACVE,KAAK,SACLC,QAASF,KAAKnB,kBAHhB,gBAQAgB,EAAAd,EAAAe,cAAA,UACEC,UAAU,UACVE,KAAK,SACLC,QAASF,KAAKN,YAHhB,SAQAG,EAAAd,EAAAe,cAAA,UACEC,UAAU,MACVE,KAAK,SACLC,QAASF,KAAKd,cAHhB,aAQAW,EAAAd,EAAAe,cAAA,UACEC,UAAU,MACVI,SAAUH,KAAKZ,eACfE,MAAOU,KAAK9B,MAAMkC,eAEjBJ,KAAK9B,MAAMG,UAAUgC,IAAI,SAACC,EAAQC,GAAT,OACxBV,EAAAd,EAAAe,cAAA,cAASS,EAAI,MAIhBP,KAAK9B,MAAMG,UAAUgC,IAAI,SAAAG,GAAI,OAC5BX,EAAAd,EAAAe,cAAA,MAAIW,IAAKD,GAAOA,cAjHZE,IAAMC,WCXxBC,IAASC,OAAOhB,EAAAd,EAAAe,cAACgB,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.baa55b7b.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    isLoaded: false,\n    goods: [],\n    goodsCopy: [],\n  }\n\n  handleOnClick = () => {\n    this.setState({\n      goods: [...goodsFromServer],\n      goodsCopy: [...goodsFromServer],\n      isLoaded: true,\n    });\n  }\n\n  reverseGoods = () => {\n    this.setState(prevState => ({\n      goodsCopy: prevState.goodsCopy.reverse(),\n    }\n    ));\n  }\n\n  sortAlphabetical = () => {\n    this.setState(prevState => ({\n      goodsCopy: prevState.goodsCopy.sort(\n        (a, b) => a.localeCompare(b)\n      ),\n    }\n    ));\n  }\n\n  sortByLength = () => {\n    this.setState(prevState => ({\n      goodsCopy: prevState.goodsCopy.sort(\n        (a, b) => b.length - a.length\n      ),\n    }\n    ));\n  }\n\n  filterByLength = (event) => {\n    const { value } = event.target;\n    this.setState(prevState => ({\n      goodsCopy: prevState.goodsCopy.filter(\n        item => item.length >= +value\n      ),\n    }));\n  }\n\n  resetGoods = () => {\n    this.setState(prevState => ({\n      goodsCopy: [...prevState.goods],\n    }\n    ));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {!this.state.isLoaded && (\n          <button\n            className=\"btn\"\n            type=\"button\"\n            onClick={this.handleOnClick}\n          >\n            Load\n          </button>\n        )}\n        {this.state.isLoaded && (\n          <div>\n            <button\n              className=\"btn\"\n              type=\"button\"\n              onClick={this.reverseGoods}\n            >\n              reverse\n            </button>\n\n            <button\n              className=\"btn\"\n              type=\"button\"\n              onClick={this.sortAlphabetical}\n            >\n              alphabetical\n            </button>\n\n            <button\n              className=\"btn btr\"\n              type=\"button\"\n              onClick={this.resetGoods}\n            >\n              reset\n            </button>\n\n            <button\n              className=\"btn\"\n              type=\"button\"\n              onClick={this.sortByLength}\n            >\n              by length\n            </button>\n\n            <select\n              className=\"btn\"\n              onChange={this.filterByLength}\n              value={this.state.selectedValue}\n            >\n              {this.state.goodsCopy.map((option, i) => (\n                <option>{i + 1}</option>\n              ))}\n            </select>\n\n            {this.state.goodsCopy.map(good => (\n              <li key={good}>{good}</li>\n            ))}\n\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}